Sam's house has an apple tree and an orange tree that yield an abundance of fruit. In the diagram below, the red region denotes his house, where s is the start point, and t is the endpoint. The apple tree is to the left of his house, and the orange tree is to its right. You can assume the trees are located on a single point, where the apple tree is at point a, and the orange tree is at point b.



When a fruit falls from its tree, it lands d units of distance from its tree of origin along the x-axis. A negative value of d means the fruit fell d units to the tree's left, and a positive value of d means it falls d units to the tree's right.

Given the value of d for m apples and n oranges, determine how many apples and oranges will fall on Sam's house (i.e., in the inclusive range [s,t])?


//SOLUTION


import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {

        int s = scanner.nextInt();

        int t = scanner.nextInt();

        String[] ab = scanner.nextLine().split(" ");

        int a = scanner.nextInt();

        int b = scanner.nextInt();

        String[] mn = scanner.nextLine().split(" ");

        int m = scanner.nextInt();

        int n = scanner.nextInt();

        int[] apples = new int[m];

        int count1 = 0, count2 = 0;

        //taking the input and checking the condition at the same time for both apple and oranges.
        for (int i = 0; i < m; i++) {
             apples[i] = scanner.nextInt();
             int pos = apples[i] + a;
             if(pos>=s && pos<=t)
                    count1 ++;
        }

        int[] oranges = new int[n];


        for (int i = 0; i < n; i++) {
            oranges[i] = scanner.nextInt();
            int pos = oranges[i] + b;
                if(pos>=s && pos<=t)
                    count2 ++;
        }

        System.out.println(count1);
        System.out.println(count2);

        scanner.close();
    }
}
